# frozen_string_literal: true

##### This file was generated by Gloss; any changes made here will be overwritten.
##### See src/ to make changes

require "listen"
module Gloss
  class Watcher
    def initialize()
      @paths = ["src/"]
    end
    def watch()
      puts("=====> Now listening for changes in #{@paths.join(", ")}")
      listener = Listen.to(*@paths, latency: 2) { |modified, added, removed|
        modified.+(added)
.each { |f|
          content = File.read(f)
          Writer.new(Builder.new(content)
.run, f)
.run
        }
        removed.each { |f|
          out_path = Utils.src_path_to_output_path(f)
          (if File.exist?(out_path)
            File.delete(out_path)
          end)
        }
      }
      listener.start
      begin
        loop { ||
          sleep(10)
        }
      rescue Interrupt
        puts("=====> Interrupt signal received, shutting down")
        exit(0)
      end
    end
  end
end

