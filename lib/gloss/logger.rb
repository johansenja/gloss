  # frozen_string_literal: true

  ##### This file was generated by Gloss; any changes made here will be overwritten.
  ##### See src/ to make changes

module Gloss
  def self.logger()
    (if @logger
      @logger
    else
      @logger = Logger.new(STDOUT)
      env_log_level = ENV.fetch("LOG_LEVEL") { ||
"INFO"      }
      @logger.level=({"UNKNOWN" => Logger::UNKNOWN,
"FATAL" => Logger::FATAL,
"ERROR" => Logger::ERROR,
"WARN" => Logger::WARN,
"INFO" => Logger::INFO,
"DEBUG" => Logger::DEBUG,
"NIL" => nil,
nil => nil,
"" => nil}.fetch(env_log_level))
      formatter = Logger::Formatter.new
      @logger.formatter=(proc() { |severity, datetime, progname, msg|
        formatter.call(severity, datetime, progname, msg)
      })
@logger
    end)
  end
end
