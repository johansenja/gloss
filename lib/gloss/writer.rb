# frozen_string_literal: true

##### This file was generated by Gloss; any changes made here will be overwritten.
##### See src/ to make changes

require "pathname"
require "fileutils"

module Gloss
  class Writer
    def initialize(content, src_path, output_path = Pathname.new(Utils.src_path_to_output_path(src_path)))
      @content = content
      @src_path = src_path
      @output_path = output_path
    end

    def run()
      unless @output_path.parent
        .exist?
        FileUtils.mkdir_p(@output_path.parent)
      end
      File.open(@output_path, "wb") { |file|
        sb = shebang
        (if sb
          file.puts(sb)
        end)
        file.puts(@content)
      }
      (if Config.prettify_output_executable_path
       # would loooove to just be using `system` to run this, but it hangs when running the test
       # suite 😕 🤷‍♂️
       begin
         pid = Process.spawn "#{Config.prettify_output_executable_path} #{@output_path.to_s}"
         th = Thread.new do
           sleep 5
           begin
             Process.kill 9, pid
           rescue
              # ok, process already dead
           else
             Gloss.logger.error "Failed to prettify output for #{@output_path}. Skipping\n\n#{e.message}"
           end
         end
         sleep 5
       ensure
         th.kill
       end
      end)
    end

    private def shebang()
      (if @output_path.executable?
        first_line = File.open(@src_path) { |f|
          f.readline
        }
        (if first_line.start_with?("#!")
          first_line
        else
          nil
        end)
      else
        nil
      end)
    end
  end
end
