  
  ##### This file was generated by Gloss; any changes made here will be overwritten.
  ##### See / to make changes

module Gloss
  class Parser
    def initialize(str)
      @str = str
    end
    def run()
      tree_json = Gloss.parse_buffer(@str)
      begin
        JSON.parse(tree_json, symbolize_names: true)
      rescue JSON::ParserError
        error_message = tree_json
        error_message.match(/.+\s:(\d+)$/)
        (if $~.[](1)
          line_number = $~.[](1)
.to_i
          context = @str.lines
.[](((          line_number.-(2)
)..(line_number)))
.map
.with_index() { |line, index|
"#{index.-(1)
.+(line_number)}|  #{line}"          }
.join
          error_message = "#{context.rstrip}\n\n#{error_message}\n"
        end)
        throw(:"error", error_message)
      end
    end
  end
end
