module Gloss
  class Parser
    def initialize(@str : String)
    end

    def run : String
      tree_json = Gloss.parse_buffer(@str)
      begin
        JSON.parse tree_json, symbolize_names: true
      rescue JSON::ParserError
        error_message = tree_json
        error_message.match /.+\s:(\d+)$/
        if $1
          line_number = $1.to_i
          # line numbers start at 1, but array index starts at 0; so this still gives one line
          # either side of the offending line
          context = @str.lines[(line_number - 2)..(line_number)].map.with_index { |line, index|
            "#{index - 1 + line_number}|  #{line}"
          }.join
          error_message = <<~MSG
          #{context.rstrip}

          #{error_message}

          MSG
        end
        throw :error, error_message
      end
    end
  end
end
